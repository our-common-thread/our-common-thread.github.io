---
import { type CollectionEntry, getCollection } from 'astro:content';
import { getSortedPosts } from '@utils/getSortedPosts';
import getPageNumbers from '@utils/getPageNumbers';
import getPagination from '@utils/getPagination';
import PortfolioList from '@layouts/PortfolioList.astro';
import PortfolioDetails from '@layouts/PortfolioDetails.astro';

export interface Props {
  post: CollectionEntry<'portfolio'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('portfolio', ({ data }) => !data.draft);

  const postResult = posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));

  const pagePaths = getPageNumbers(posts.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection('portfolio');

const sortedPosts = getSortedPosts(posts) as CollectionEntry<'portfolio'>[];

const pagination = getPagination({
  posts: sortedPosts,
  page: slug,
});
---

{post ? <PortfolioDetails post={post} /> : <PortfolioList {...pagination} />}
