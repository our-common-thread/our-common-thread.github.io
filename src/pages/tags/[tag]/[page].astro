---
import { type CollectionEntry, getCollection } from 'astro:content';
import TagPosts from '@layouts/TagPosts.astro';
import getUniqueTags from '@utils/getUniqueTags';
import getPostsByTag from '@utils/getPostsByTag';
import getPageNumbers from '@utils/getPageNumbers';
import getPagination from '@utils/getPagination';

export interface Props {
  post: CollectionEntry<'posts'> | undefined;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => !data.draft);
  const portfolio = await getCollection('portfolio');

  const tags = getUniqueTags(posts, portfolio);

  return tags.flatMap(({ tag, tagName }) => {
    const tagPosts = getPostsByTag(posts, tag);
    const tagPortfolio = getPostsByTag(portfolio, tag);
    const totalPages = getPageNumbers(tagPosts.length + tagPortfolio.length);

    return totalPages.map(page => ({
      params: { tag, page },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const posts = await getCollection('posts', ({ data }) => !data.draft);
const portfolio = await getCollection('portfolio');

const postsByTag = getPostsByTag(posts, tag);
const portfolioByTag = getPostsByTag(portfolio, tag);

// portfolio matches will always show up on top
const allPostsByTag = portfolioByTag.concat(postsByTag);

const pagination = getPagination({
  posts: allPostsByTag,
  page,
});
---

<TagPosts {...pagination} {tag} {tagName} />
